version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: cimg/python:3.6
jobs:
  build:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: write cache key
          command: echo $CACHE_KEY > /tmp/cache-key
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "/tmp/cache-key" }}-{{ checksum "requirements.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --upgrade pip
            pip install -r requirements.txt -i https://pypi.python.org/simple
      - save_cache:
          paths:
          - ./venv
          key: v1-dependencies-{{ checksum "/tmp/cache-key" }}-{{ checksum "requirements.txt" }}
  test:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: write cache key
          command: echo $CACHE_KEY > /tmp/cache-key
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "/tmp/cache-key" }}-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: run tests and linting
          command: |
            . venv/bin/activate
            flake8 --statistics
            pytest -v --cov --junitxml=test-reports/junit.xml
            coveralls
      - store_test_results:
          path: test-reports
      - store_artifacts:
          path: test-reports
  deploy:
    <<: *defaults
    steps:
      - checkout
      - run:
          name: write cache key
          command: echo $CACHE_KEY > /tmp/cache-key
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "/tmp/cache-key" }}-{{ checksum "requirements.txt" }}
          - v1-dependencies-
      - run:
          name: verify git tag vs. version
          command: |
            . venv/bin/activate
            python setup.py verify
      - run:
          name: deploy library
          command: |
            . venv/bin/activate
            pip install --upgrade pip setuptools wheel twine
            python setup.py sdist bdist_wheel
            twine upload dist/*
workflows:
  version: 2
  build_test_and_deploy:
    jobs:
      - build:
          filters:
            tags:
              only: /^v.*/
      - test:
          requires:
            - build
          filters:
            tags:
              only: /^v.*/
      - deploy:
          requires:
            - build
            - test
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

